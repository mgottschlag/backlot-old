<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<entity size="0.2/0.2" origin="0.1/0.1">
	<properties>
		<weapon default="65535" type="uint" size="16" />
		<player default="65535" type="uint" size="16" />
		<start default="0/0" type="vector2f" />
		<speed default="0/0" type="vector2f" />
	</properties>
	<image name="bulletimage" src="sprites/plasma.png" position="-0.1/-0.1" size="0.2/0.2" depth="1.5" />
	<script>
	<![CDATA[
		time = 0
		position = start:getVector2F()

		function on_changed(property)
			print(property:getName().." changed.")
		end
		function on_update()
			local oldpos = start:getVector2F() + speed:getVector2F() * (time / 50)
			time = time + 1;
			local newpos = start:getVector2F() + speed:getVector2F() * (time / 50)
			-- Collision checking
			local collision = Game.get():getCollision(oldpos, newpos, 1)
			if collision.collision then
				-- Register bullet for deletion
				if Server ~= nil then
					Game.get():registerForDeletion(this:getID())
					-- Do damage
					explosion()
				end
			end
			-- Set new position
			position = newpos
			if Client ~= nil then
				bulletimage:setPosition(position)
			end
			-- Check for entity hits
			local rect = this:getRectangle();
			rect.x = rect.x + position.x
			rect.y = rect.y + position.y
			local entitylist = Game.get():getEntities(rect, "player")
			if entitylist:getSize() > 0 then
				hit(entitylist)
			end
			entitylist = Game.get():getEntities(rect, "bot")
			if entitylist:getSize() > 0 then
				hit(entitylist)
			end
		end

		function on_destroy()
			if Client ~= nil then
				-- Draw explosion
				-- TODO: This is unreliable
				local explosion = Effect()
				explosion:load("sprites/explosion.png", Vector2I(4, 4), "sounds/plasmaexplosion.wav")
				explosion:setPosition(position)
				explosion:setPeriod(500)
				explosion:play(1)
			end
		end

		function hit(entitylist)
			-- Don't hit yourself
			local playerentity = Game.get():getEntity(player:getInt())
			entitylist:removeEntity(playerentity)
			if entitylist:getSize() > 0 then
				print("Player hit!")
				if Server ~= nil then
					Game.get():registerForDeletion(this:getID())
				end
				-- Do damage
				entitylist:getEntity(0):getScript():callFunction("do_damage", this:getID(), 20)
				explosion()
			end
		end

		function explosion()
			if Server ~= nil then
				local damagerect = RectangleF(position.x - 2, position.y - 2,
					4, 4)
				local entitylist = Game.get():getEntities(damagerect, "player")
				-- Loop through all entities hit and apply damage
				for i = 0, entitylist:getSize() - 1, 1 do
					local otherplayer = entitylist:getEntity(i)
					-- TODO: Calculate damage based on the distance
					otherplayer:getScript():callFunction("do_damage", this:getID(), 20)
				end
			end
		end
	]]>
	</script>
</entity>
